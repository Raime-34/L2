package main

import "fmt"

/*
–ü–∞—Ç—Ç–µ—Ä–Ω –ö–æ–º–∞–Ω–¥–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á—ã–Ω–º–∏ –∑–∞–ø—Ä–æ—Å–∞–º–∏ –∫–∞–∫ —Å –æ–±—ä–µ–∫—Ç–∞–º–∏

+ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–∞–ª–∏–∑–æ–≤—ã–≤–∞—Ç—å –æ—Ç–º–µ–Ω—É –æ–ø–µ—Ä–∞—Ü–∏–π
+ –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–±–∏—Ä–∞—Ç—å —Å–ª–æ–∂–Ω—É—é –æ–ø–µ—Ä–∞—Ü–∏—é –∏–∑ –ø—Ä–æ—Å—Ç—ã—Ö
- –Ω–∞–≥—Ä–æ–º–æ–∂–¥–∞–µ—Ç –∫–æ–¥

–î–∞–Ω–Ω—ã–π –ø–æ–∞—Ç—Ç–µ—Ä–Ω –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –µ—Å–ª–∏ –∏–º–µ–µ—Ç—Å—è –¥–æ–ø—É—Å—Ç–∏–º –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –∫–Ω–æ–ø–∫–∏ –≤ —ç–ª–µ–º–µ–Ω—Ç–∞—Ö UI, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –¥–æ–ª–∂–Ω—ã
—á—Ç–æ-—Ç–æ —Å–¥–µ–ª–∞—Ç—å. –° –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç—Å—è –¥–∞—Ç—å —Ö—ç–Ω–¥–ª–∏–Ω–≥ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ —Å—Ç–æ—Ä–æ–Ω–Ω–µ–º—É –æ–±—ä–µ–∫—Ç—É, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ä–∞–Ω–µ–µ
–∑–Ω–∞–µ—Ç, —á—Ç–æ –æ—Ç –Ω–µ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è
*/

// –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å
type DeliveryCompany struct {
	courier Courier
}

func (club *DeliveryCompany) execute(recipient Recipient) {
	club.courier.sendPackage(recipient)
}

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —Ä–µ–∞–ª–∏–∑—É—é—â–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω –∫–æ–º–∞–Ω–¥–∞
type Courier interface {
	sendPackage(recipient Recipient)
}

type LegendaryCourier struct {
	name       string
	thePackage string
}

func (c LegendaryCourier) sendPackage(recipient Recipient) {
	recipient.getPackage(c.thePackage)
}

// –ü–æ–ª—É—á–∞—Ç–µ–ª—å
type Recipient interface {
	getPackage(thePackage string)
}

type SomeRecipient struct {
	name string
}

func (r *SomeRecipient) getPackage(thePackage string) {
	fmt.Printf("%v –ø–æ–ª—É—á–∏–ª \"%v\" üëç\n", r.name, thePackage)
}

func main() {

	bridges := DeliveryCompany{
		courier: LegendaryCourier{
			name:       "C—ç–º –ü–æ—Ä—Ç–µ—Ä –ë—Ä–∏–¥–∂–µ—Å",
			thePackage: "–ü–∏—Ü—Ü–∞",
		},
	}

	mokhaveExpress := DeliveryCompany{
		courier: LegendaryCourier{
			name:       "–ò–ª—å—è –ú—ç–¥–∏—Å–æ–Ω",
			thePackage: "–ü–ª–∞—Ç–∏–Ω–æ–≤–∞—è —Ñ–∏—à–∫–∞",
		},
	}

	dom := SomeRecipient{
		name: "–ú—Ä. –•–∞—É—Å",
	}

	baker := SomeRecipient{
		name: "–•–∏–≥–≥—Å –ú–æ–Ω–∞–≥–∞–Ω",
	}

	bridges.execute(&baker)

	mokhaveExpress.execute(&dom)

}
